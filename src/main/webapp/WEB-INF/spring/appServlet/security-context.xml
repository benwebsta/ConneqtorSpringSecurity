<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
    <http auto-config="true" use-expressions="true">
    	<intercept-url pattern="/admin/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MODERATOR')"/>
    </http>
    
    <beans:import resource="servlet-context.xml"/>

    <beans:bean id="bcrypt" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <password-encoder ref="bcrypt"/>
            <jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
                users-by-username-query="
                select username, password, active
                from users where username=?" 
                authorities-by-username-query="
                select u.username, r.role from users u, roles r, user_roles ur 
                where u.user_id=ur.user_id and r.role_id=ur.role_id and u.username=?" 
            />
        </authentication-provider>
    </authentication-manager>
    
  <!--   <bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
	<property name="authenticationManager" ref="authenticationManager"/>
	<property name="accessDecisionManager" ref="accessDecisionManager"/>
	<property name="securityMetadataSource">
		<security:filter-security-metadata-source>
		<security:intercept-url pattern="/secure/super/**" access="ROLE_WE_DONT_HAVE"/>
		<security:intercept-url pattern="/secure/**" access="ROLE_SUPERVISOR,ROLE_TELLER"/>
		</security:filter-security-metadata-source>
	</property>
	</bean> -->
      
</beans:beans>


